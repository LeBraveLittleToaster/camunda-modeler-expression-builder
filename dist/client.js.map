{"version":3,"file":"client.js","sources":["webpack://camunda-modeler-autosave-plugin/./client/AutoSavePlugin.js","webpack://camunda-modeler-autosave-plugin/./client/ConfigModal.js","webpack://camunda-modeler-autosave-plugin/./node_modules/camunda-modeler-plugin-helpers/components.js","webpack://camunda-modeler-autosave-plugin/./node_modules/camunda-modeler-plugin-helpers/index.js","webpack://camunda-modeler-autosave-plugin/./node_modules/camunda-modeler-plugin-helpers/react.js","webpack://camunda-modeler-autosave-plugin/webpack/bootstrap","webpack://camunda-modeler-autosave-plugin/webpack/runtime/compat get default export","webpack://camunda-modeler-autosave-plugin/webpack/runtime/define property getters","webpack://camunda-modeler-autosave-plugin/webpack/runtime/hasOwnProperty shorthand","webpack://camunda-modeler-autosave-plugin/webpack/runtime/make namespace object","webpack://camunda-modeler-autosave-plugin/./client/index.js"],"sourcesContent":["/**\n * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n * under one or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information regarding copyright\n * ownership.\n *\n * Camunda licenses this file to you under the MIT; you may not use this file\n * except in compliance with the MIT License.\n */\n\n/* eslint-disable no-unused-vars*/\nimport React, { Fragment, PureComponent } from 'camunda-modeler-plugin-helpers/react';\nimport { Fill } from 'camunda-modeler-plugin-helpers/components';\n\nimport ConfigModal from './ConfigModal';\n\nconst defaultState = {\n  enabled: false,\n  interval: 5,\n  configOpen: false\n};\n\n/**\n * An example client extension plugin to enable auto saving functionality\n * into the Camunda Modeler\n */\nexport default class AutoSavePlugin extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = defaultState;\n\n    this.handleConfigClosed = this.handleConfigClosed.bind(this);\n  }\n\n  componentDidMount() {\n\n    /**\n    * The component props include everything the Application offers plugins,\n    * which includes:\n    * - config: save and retrieve information to the local configuration\n    * - subscribe: hook into application events, like <tab.saved>, <app.activeTabChanged> ...\n    * - triggerAction: execute editor actions, like <save>, <open-diagram> ...\n    * - log: log information into the Log panel\n    * - displayNotification: show notifications inside the application\n    */\n    const {\n      config,\n      subscribe\n    } = this.props;\n\n    // retrieve plugin related information from the application configuration\n    config.getForPlugin('autoSave', 'config')\n      .then(config => this.setState(config));\n\n    // subscribe to the event when the active tab changed in the application\n    subscribe('app.activeTabChanged', ({ activeTab }) => {\n      this.clearTimer();\n\n      if (this.state.enabled && activeTab.file && activeTab.file.path) {\n        this.setupTimer();\n      }\n    });\n\n    // subscribe to the event when a tab was saved in the application\n    subscribe('tab.saved', () => {\n      if (!this.timer && this.state.enabled) {\n        this.setupTimer();\n      }\n    });\n  }\n\n  componentDidUpdate() {\n    const {\n      configOpen,\n      enabled\n    } = this.state;\n\n    if (!enabled || configOpen) {\n      this.clearTimer();\n    }\n\n    if (!this.timer && !configOpen && enabled) {\n      this.setupTimer();\n    }\n  }\n\n  setupTimer() {\n    this.timer = setTimeout(() => {\n      this.save();\n      this.setupTimer();\n    }, this.state.interval * 1000);\n  }\n\n  clearTimer() {\n    if (this.timer) {\n      clearTimeout(this.timer);\n      this.timer = null;\n    }\n  }\n\n  save() {\n    const {\n      displayNotification,\n      triggerAction\n    } = this.props;\n\n    // trigger a tab save operation\n    triggerAction('save')\n      .then(tab => {\n        if (!tab) {\n          return displayNotification({ title: 'Failed to save' });\n        }\n      });\n  }\n\n  handleConfigClosed(newConfig) {\n    this.setState({ configOpen: false });\n\n    if (newConfig) {\n\n      // via <config> it is also possible to save data into the application configuration\n      this.props.config.setForPlugin('autoSave', 'config', newConfig)\n        .catch(console.error);\n\n      this.setState(newConfig);\n    }\n  }\n\n  /**\n   * render any React component you like to extend the existing\n   * Camunda Modeler application UI\n   */\n  render() {\n    const {\n      enabled,\n      interval\n    } = this.state;\n\n    const initValues = {\n      enabled,\n      interval\n    };\n\n    // we can use fills to hook React components into certain places of the UI\n    return <Fragment>\n      <Fill slot=\"toolbar\" group=\"9_autoSave\">\n        <button type=\"button\" onClick={ () => this.setState({ configOpen: true }) }>\n          Configure autosave\n        </button>\n      </Fill>\n      { this.state.configOpen && (\n        <ConfigModal\n          onClose={ this.handleConfigClosed }\n          initValues={ initValues }\n        />\n      )}\n    </Fragment>;\n  }\n}\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'camunda-modeler-plugin-helpers/react';\nimport { Modal } from 'camunda-modeler-plugin-helpers/components';\n\n\n// polyfill upcoming structural components\nconst Title = Modal.Title || (({ children }) => <h2>{ children }</h2>);\nconst Body = Modal.Body || (({ children }) => <div>{ children }</div>);\nconst Footer = Modal.Footer || (({ children }) => <div>{ children }</div>);\n\n// we can even use hooks to render into the application\nexport default function ConfigModal({ initValues, onClose }) {\n  const [ enabled, setEnabled ] = useState(initValues.enabled);\n  const [ interval, setAutoSaveInterval ] = useState(initValues.interval);\n\n  const onSubmit = () => onClose({ enabled, interval });\n\n  // we can use the built-in styles, e.g. by adding \"btn btn-primary\" class names\n  return <Modal onClose={ onClose }>\n    <Title>\n      AutoSave Configuration\n    </Title>\n\n    <Body>\n      <form id=\"autoSaveConfigForm\" onSubmit={ onSubmit }>\n        <p>\n          <label>\n            Enabled:\n            <input\n              type=\"checkbox\"\n              name=\"enabled\"\n              checked={ enabled }\n              onChange={ () => setEnabled(!enabled) }\n            />\n          </label>\n        </p>\n        <p>\n          <label>\n            Interval (seconds):\n            <input\n              type=\"number\"\n              name=\"interval\"\n              min=\"1\"\n              value={ interval }\n              onChange={ event => setAutoSaveInterval(Number(event.target.value)) }\n            />\n          </label>\n        </p>\n      </form>\n    </Body>\n\n    <Footer>\n      <div id=\"autoSaveConfigButtons\">\n        <button type=\"submit\" class=\"btn btn-primary\" form=\"autoSaveConfigForm\">Save</button>\n        <button type=\"button\" class=\"btn btn-secondary\" onClick={ () => onClose() }>Cancel</button>\n      </div>\n    </Footer>\n  </Modal>;\n}\n\n","if (!window.components) {\n  throw new Error('Not compatible with Camunda Modeler < 3.4');\n}\n\n/**\n * Fill component.\n *\n * @type {import('react').ComponentType<{ group: string, name: string }>}\n */\nexport const Fill = window.components.Fill;\n\n/**\n * Modal component.\n *\n * @type {import('react').ComponentType<{ onClose: Function }>}\n */\nexport const Modal = window.components.Modal;","/**\n * Validate and register a client plugin.\n *\n * @param {Object} plugin\n * @param {String} type\n */\nexport function registerClientPlugin(plugin, type) {\n  var plugins = window.plugins || [];\n  window.plugins = plugins;\n\n  if (!plugin) {\n    throw new Error('plugin not specified');\n  }\n\n  if (!type) {\n    throw new Error('type not specified');\n  }\n\n  plugins.push({\n    plugin: plugin,\n    type: type\n  });\n}\n\n/**\n * Validate and register a client plugin.\n *\n * @param {import('react').ComponentType} extension\n *\n * @example\n *\n * import MyExtensionComponent from './MyExtensionComponent';\n *\n * registerClientExtension(MyExtensionComponent);\n */\nexport function registerClientExtension(component) {\n  registerClientPlugin(component, 'client');\n}\n\n/**\n * Validate and register a bpmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerBpmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const BpmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerBpmnJSPlugin(BpmnJSModule);\n */\nexport function registerBpmnJSPlugin(module) {\n  registerClientPlugin(module, 'bpmn.modeler.additionalModules');\n}\n\n/**\n * Validate and register a bpmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerBpmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerBpmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerBpmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'bpmn.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a dmn-moddle extension plugin.\n *\n * @param {Object} descriptor\n *\n * @example\n * import {\n *   registerDmnJSModdleExtension\n * } from 'camunda-modeler-plugin-helpers';\n *\n * var moddleDescriptor = {\n *   name: 'my descriptor',\n *   uri: 'http://example.my.company.localhost/schema/my-descriptor/1.0',\n *   prefix: 'mydesc',\n *\n *   ...\n * };\n *\n * registerDmnJSModdleExtension(moddleDescriptor);\n */\nexport function registerDmnJSModdleExtension(descriptor) {\n  registerClientPlugin(descriptor, 'dmn.modeler.moddleExtension');\n}\n\n/**\n * Validate and register a dmn-js plugin.\n *\n * @param {Object} module\n *\n * @example\n *\n * import {\n *   registerDmnJSPlugin\n * } from 'camunda-modeler-plugin-helpers';\n *\n * const DmnJSModule = {\n *   __init__: [ 'myService' ],\n *   myService: [ 'type', ... ]\n * };\n *\n * registerDmnJSPlugin(DmnJSModule, [ 'drd', 'literalExpression' ]);\n * registerDmnJSPlugin(DmnJSModule, 'drd')\n */\nexport function registerDmnJSPlugin(module, components) {\n\n  if (!Array.isArray(components)) {\n    components = [ components ]\n  }\n\n  components.forEach(c => registerClientPlugin(module, `dmn.modeler.${c}.additionalModules`)); \n}\n\n/**\n * Return the modeler directory, as a string.\n *\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\n *\n * @return {String}\n */\nexport function getModelerDirectory() {\n  return window.getModelerDirectory();\n}\n\n/**\n * Return the modeler plugin directory, as a string.\n *\n * @deprecated Will be removed in future Camunda Modeler versions without replacement.\n *\n * @return {String}\n */\nexport function getPluginsDirectory() {\n  return window.getPluginsDirectory();\n}","if (!window.react) {\n  throw new Error('Not compatible with Camunda Modeler < 3.4');\n}\n\n/**\n * React object used by Camunda Modeler. Use it to create UI extension.\n *\n * @type {import('react')}\n */\nmodule.exports = window.react;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\n * Copyright Camunda Services GmbH and/or licensed to Camunda Services GmbH\n * under one or more contributor license agreements. See the NOTICE file\n * distributed with this work for additional information regarding copyright\n * ownership.\n *\n * Camunda licenses this file to you under the MIT; you may not use this file\n * except in compliance with the MIT License.\n */\n\nimport { registerClientExtension } from 'camunda-modeler-plugin-helpers';\n\nimport AutoSavePlugin from './AutoSavePlugin';\n\nregisterClientExtension(AutoSavePlugin);\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAKA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAKA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAFA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AAFA;AAMA;AACA;AArIA;AACA;A;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAMA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAJA;AAYA;AACA;AACA;AACA;AACA;AALA;AAaA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AACA;A;;;;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A;;;;;;;;;;;;;;;;;;;;ACjtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;ACPA;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;;;;A","sourceRoot":""}